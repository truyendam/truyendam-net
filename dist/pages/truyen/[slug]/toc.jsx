"use strict";
// ‚úÖ File: pages/truyen/[slug]/toc.tsx ‚Äì TOC c√≥ tag g·∫Øn link gi·ªëng homepage + label nh√≥m c√≥ link
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = ChapterTocPage;
const head_1 = __importDefault(require("next/head"));
const router_1 = require("next/router");
const link_1 = __importDefault(require("next/link"));
const mockStories_1 = require("@/lib/mock/mockStories");
const mockChapters_1 = __importDefault(require("@/lib/mock/mockChapters"));
const ContinueReading_1 = __importDefault(require("@/components/ContinueReading"));
const script_1 = __importDefault(require("next/script")); // ‚úÖ Breadcrumb SEO
const image_1 = __importDefault(require("next/image"));
function slugify(str) {
    if (!str)
        return "";
    return str
        .normalize("NFD")
        .replace(/ƒë/g, "d")
        .replace(/[ÃÄ-ÕØ]/g, "")
        .replace(/[^a-zA-Z0-9\s-]/g, "")
        .replace(/\s+/g, "-")
        .toLowerCase();
}
function ChapterTocPage() {
    var _a, _b;
    const router = (0, router_1.useRouter)();
    const { slug } = router.query;
    const story = mockStories_1.mockStories.find((s) => s.slug === slug);
    const chapterObj = mockChapters_1.default[slug] || {};
    const chapters = Object.values(chapterObj).sort((a, b) => a.id - b.id);
    
    if (typeof slug !== "string") {
  // Ch∆∞a c√≥ slug, ch·ªù route, ch∆∞a render error
  return null; // ho·∫∑c loading...
}
    if (!story) {
        return (<div className="min-h-screen flex items-center justify-center bg-black text-white">
        <p>Kh√¥ng t√¨m th·∫•y truy·ªán.</p>
      </div>);
    }
    const keywords = ((_a = story.tags) === null || _a === void 0 ? void 0 : _a.join(", ")) +
        ", truy·ªán sex, truy·ªán ng∆∞·ªùi l·ªõn, danh s√°ch ch∆∞∆°ng, truy·ªán 18+, truy·ªán xxx" ||
        "truy·ªán sex, truy·ªán ng∆∞·ªùi l·ªõn, danh s√°ch ch∆∞∆°ng, truy·ªán 18+, truy·ªán xxx";
    const hotStories = mockStories_1.mockStories.filter((s) => (s.views || 0) > 5000);
    const shortStories = mockStories_1.mockStories.filter((s) => s.tags.includes("truy·ªán sex ng·∫Øn"));
    const longStories = mockStories_1.mockStories.filter((s) => s.tags.includes("truy·ªán d√†i") || (s.totalChapters || 0) > 3);
    return (<>
      <head_1.default>
        <title>{`Danh s√°ch ch∆∞∆°ng - ${story.title} | Truy·ªán sex full t·∫°i Truyendam.net`}</title>
        <meta name="description" content={`ƒê·ªçc to√†n b·ªô ch∆∞∆°ng truy·ªán '${story.title}' ‚Äì ƒë·∫ßy ƒë·ªß, d·ªÖ ch·ªçn, h·ªó tr·ª£ mobile, c·∫≠p nh·∫≠t li√™n t·ª•c t·∫°i Truyendam.net.`}/>
        <meta name="keywords" content={keywords}/>
        <meta property="og:title" content={`TOC - ${story.title}`}/>
        <meta property="og:description" content={`Danh s√°ch ƒë·∫ßy ƒë·ªß c√°c ch∆∞∆°ng truy·ªán '${story.title}' ‚Äì truy·ªán sex hay, truy·ªán ng∆∞·ªùi l·ªõn h·∫•p d·∫´n.`}/>
        <meta property="og:image" content={`https://truyendam.net/og-cover/${story.slug}.jpg`}/>
        <meta property="og:url" content={`https://truyendam.net/truyen/${story.slug}/toc`}/>
        <meta property="og:type" content="article"/>
        <meta name="twitter:card" content="summary_large_image"/>
        <link rel="canonical" href={`https://truyendam.net/truyen/${slug}/toc`}/>
      </head_1.default>

      <script_1.default type="application/ld+json" id="breadcrumb-jsonld" strategy="afterInteractive" dangerouslySetInnerHTML={{
            __html: JSON.stringify({
                "@context": "https://schema.org",
                "@type": "BreadcrumbList",
                itemListElement: [
                    {
                        "@type": "ListItem",
                        position: 1,
                        name: "Trang ch·ªß",
                        item: "https://truyendam.net",
                    },
                    {
                        "@type": "ListItem",
                        position: 2,
                        name: "Truy·ªán",
                        item: "https://truyendam.net/truyen",
                    },
                    {
                        "@type": "ListItem",
                        position: 3,
                        name: story.title,
                        item: `https://truyendam.net/truyen/${story.slug}`,
                    },
                    {
                        "@type": "ListItem",
                        position: 4,
                        name: "Danh s√°ch ch∆∞∆°ng",
                        item: `https://truyendam.net/truyen/${story.slug}/toc`,
                    },
                ],
            }),
        }}/>

      <div className="bg-black text-white min-h-screen px-4 py-6">
        <div className="text-sm text-center mb-6">
          <link_1.default href={`/truyen/${slug}`} className="text-pink-400 hover:underline">
            ‚Üê Quay v·ªÅ truy·ªán
          </link_1.default>
        </div>

        <div className="max-w-3xl mx-auto flex flex-col sm:flex-row items-center sm:items-start gap-4 mb-6 px-2">
    <div className="w-28 h-40 sm:w-32 sm:h-44 relative rounded-md shadow overflow-hidden">
  <image_1.default src={story.coverImage || "/default-cover.jpg"} alt={story.title} fill className="object-cover rounded-md" sizes="128px"/>
    </div>
          <div className="text-center sm:text-left">
            <h1 className="text-xl md:text-2xl font-bold text-pink-400 mb-1">
              {story.title}
            </h1>

            {story.status && (<p className="text-sm text-gray-400 mb-1">
                <span className="text-white font-medium">T√¨nh tr·∫°ng:</span>{" "}
                {story.status === "ongoing" ? "ƒêang ra" : "ƒê√£ ho√†n th√†nh"}
              </p>)}

            <p className="text-sm text-gray-400 mb-1">
              {chapters.length} ch∆∞∆°ng ¬∑ Ch·ªçn ƒë·ªÉ ƒë·ªçc ngay b√™n d∆∞·ªõi
            </p>

            {story.description && (<p className="text-sm text-zinc-300 max-w-md">{story.description}</p>)}

            {((_b = story.tags) === null || _b === void 0 ? void 0 : _b.length) > 0 && (<div className="flex flex-wrap gap-2 mt-2">
                {story.tags.map((tag, index) => {
                const slugTag = tag
                    .toLowerCase()
                    .replace(/ /g, "-")
                    .normalize("NFD")
                    .replace(/[\u0300-\u036f]/g, "");
                return (<link_1.default key={index} href={`/tag/${slugify(tag)}/page/1`} className="text-xs sm:text-sm text-pink-400 bg-zinc-800 px-2 py-1 rounded hover:bg-pink-600 transition-all">
                      #{tag}
                    </link_1.default>);
            })}
              </div>)}
          </div>
        </div>

        <div className="max-w-3xl mx-auto mb-6 px-2">
          <ContinueReading_1.default slug={story.slug} totalChapters={story.totalChapters}/>
        </div>

        <div className="max-w-3xl mx-auto px-2">
          <h2 className="text-lg font-semibold text-center text-white mb-4">Danh s√°ch ch∆∞∆°ng</h2>
          <div className="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 gap-3 md:gap-4">
            {chapters.map((ch) => {
            const isNew = ch.updatedAt &&
                new Date().getTime() - new Date(ch.updatedAt).getTime() <
                    3 * 24 * 60 * 60 * 1000;
            return (<link_1.default key={ch.id} href={`/truyen/${slug}/chapters/${ch.id}`} className="relative block bg-zinc-900 hover:bg-pink-600 text-white hover:text-white transition-all px-4 py-3 rounded-xl shadow text-sm sm:text-base text-center transform hover:scale-[1.03]">
                  üìñ Ch∆∞∆°ng {ch.id}
                  {isNew && (<span className="absolute bottom-1 right-1 text-[10px] bg-pink-500 text-white px-1.5 py-[1px] rounded-full font-medium shadow-md tracking-tight animate-pulse">
                      NEW
                    </span>)}
                </link_1.default>);
        })}
          </div>
        </div>

        <div className="max-w-3xl mx-auto mt-12 px-2 space-y-12">
          {/* üî• Truy·ªán HOT */}
          <div>
            <link_1.default href="/hot/page/1">
              <h2 className="text-xl font-bold mb-1 text-red-400 hover:underline">üî• Truy·ªán HOT</h2>
            </link_1.default>
            <p className="text-sm text-gray-400 mb-2">Nh·ªØng truy·ªán ng∆∞·ªùi l·ªõn ƒë∆∞·ª£c ƒë·ªçc nhi·ªÅu nh·∫•t g·∫ßn ƒë√¢y</p>
            <ul className="list-disc list-inside text-sm text-white space-y-1">
              {hotStories.slice(0, 3).map((s) => (<li key={s.slug}>
                  <link_1.default href={`/truyen/${s.slug}`} className="hover:underline text-pink-400">
                    {s.title}
                  </link_1.default>
                </li>))}
            </ul>
          </div>

          {/* ‚úçÔ∏è Truy·ªán sex ng·∫Øn */}
          <div>
            <link_1.default href="/short/page/1">
              <h2 className="text-xl font-bold mb-1 text-pink-400 hover:underline">‚úçÔ∏è Truy·ªán sex ng·∫Øn</h2>
            </link_1.default>
            <p className="text-sm text-gray-400 mb-2">Truy·ªán ng·∫Øn k√≠ch th√≠ch, ƒë·ªçc nhanh, l√™n nhanh</p>
            <ul className="list-disc list-inside text-sm text-white space-y-1">
              {shortStories.slice(0, 3).map((s) => (<li key={s.slug}>
                  <link_1.default href={`/truyen/${s.slug}`} className="hover:underline text-pink-400">
                    {s.title}
                  </link_1.default>
                </li>))}
            </ul>
          </div>

          {/* üìö Truy·ªán d√†i t·∫≠p */}
          <div>
            <link_1.default href="/long/page/1">
              <h2 className="text-xl font-bold mb-1 text-purple-400 hover:underline">üìö Truy·ªán d√†i t·∫≠p</h2>
            </link_1.default>
            <p className="text-sm text-gray-400 mb-2">D√†nh cho ng∆∞·ªùi m√™ c·ªët truy·ªán s√¢u v√† nhi·ªÅu ch∆∞∆°ng</p>
            <ul className="list-disc list-inside text-sm text-white space-y-1">
              {longStories.slice(0, 3).map((s) => (<li key={s.slug}>
                  <link_1.default href={`/truyen/${s.slug}`} className="hover:underline text-pink-400">
                    {s.title}
                  </link_1.default>
                </li>))}
            </ul>
          </div>
        </div>
      </div>
    </>);
}
